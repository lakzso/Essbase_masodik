package hu.bme.mit.inf.essbase;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class Template {
  public CharSequence getLatexContent(final long ktgh, final long szolg, final long gepj, final long ugyf) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\\documentclass{article}");
    _builder.newLine();
    _builder.append("\\usepackage{t1enc}");
    _builder.newLine();
    _builder.append("\\usepackage[latin2]{inputenc}");
    _builder.newLine();
    _builder.append("\\def\\magyarOptions{hyphenation=huhyphn}");
    _builder.newLine();
    _builder.append("\\usepackage[magyar]{babel}");
    _builder.newLine();
    _builder.append("\\usepackage{pgfplots}");
    _builder.newLine();
    _builder.append("\\usepackage{pgf-pie}");
    _builder.newLine();
    _builder.append("\\pgfplotsset{compat=1.5}");
    _builder.newLine();
    _builder.append("\\begin{document}");
    _builder.newLine();
    _builder.append("\\section{Objektumok költség megszlása}");
    _builder.newLine();
    _builder.append("\\begin {tikzpicture}");
    _builder.newLine();
    _builder.append("\\pie {");
    _builder.append(ktgh, "");
    _builder.append("/ Költséghelyek , ");
    _builder.append(szolg, "");
    _builder.append("/ Szolgáltatások , ");
    _builder.append(gepj, "");
    _builder.append("/ Autók , ");
    _builder.append(ugyf, "");
    _builder.append("/ Ügyfelek }");
    _builder.newLineIfNotEmpty();
    _builder.append("\\end {tikzpicture}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\section{Ügyfelek költség megszlása}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\begin{tikzpicture}");
    _builder.newLine();
    _builder.append("\\begin{axis}[");
    _builder.newLine();
    _builder.append("view={120}{40},");
    _builder.newLine();
    _builder.append("width=350pt,");
    _builder.newLine();
    _builder.append("height=350pt,");
    _builder.newLine();
    _builder.append("grid=major,");
    _builder.newLine();
    _builder.append("z buffer=sort,");
    _builder.newLine();
    _builder.append("xmin=-1,xmax=30,");
    _builder.newLine();
    _builder.append("ymin=-1,ymax=30,");
    _builder.newLine();
    _builder.append("zmin=-1,zmax=30,");
    _builder.newLine();
    _builder.append("enlargelimits=upper,");
    _builder.newLine();
    _builder.append("xtick={-1,1,...,30},");
    _builder.newLine();
    _builder.append("ytick={-1,1,...,30},");
    _builder.newLine();
    _builder.append("ztick={-1,1,...,30},");
    _builder.newLine();
    _builder.append("xlabel={$Ugyfel$},");
    _builder.newLine();
    _builder.append("ylabel={$Koltsegnem$},");
    _builder.newLine();
    _builder.append("zlabel={$Ertek$},");
    _builder.newLine();
    _builder.append("point meta={x+y+z+3},");
    _builder.newLine();
    _builder.append("colormap={summap}{");
    _builder.newLine();
    _builder.append("color=(black); color=(blue);");
    _builder.newLine();
    _builder.append("color=(black); color=(white)");
    _builder.newLine();
    _builder.append("color=(orange) color=(violet)");
    _builder.newLine();
    _builder.append("color=(red)");
    _builder.newLine();
    _builder.append("},");
    _builder.newLine();
    _builder.append("scatter/use mapped color={");
    _builder.newLine();
    _builder.append("draw=mapped color,fill=mapped color!70},");
    _builder.newLine();
    _builder.append("]");
    _builder.newLine();
    _builder.append("\\addplot3[only marks,scatter,mark=cube*,mark size=7]");
    _builder.newLine();
    _builder.append("table {plotdata/data.dat};");
    _builder.newLine();
    _builder.append("\\end{axis}");
    _builder.newLine();
    _builder.append("\\end{tikzpicture}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\end{document}");
    _builder.newLine();
    return _builder;
  }
}
