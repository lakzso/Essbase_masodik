grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/example/mydsl/MyDsl"

Model:
	(Queries+=Query)*
	(Reports+=Report)*
	;
Query:
	QueryReport | QueryMDX
;

database:
	value=STRING
;

QueryMDX:
	name=ID '=' 'queryMDX' '{'
	
	'SELECT' (QueryMDX+=MDXQueryParameters)* 
	'FROM'
	from=database
	'}'
	;
	
MDXQueryParameters:
	'Teszt';


QueryReport:
	name=ID '=' 'queryReport' '{'
	InitialStatement
	(QueryReport+=ReportQueryParameters)* '}'
	;

Report:
	'reportToLatex' '(' {Report} repout=[Query] ',' from=database ')'
;


ReportQueryParameters:
	Column | Row | Descendants | Declaration | Reference | Child | Link | ReportParameter;



InitialStatement:
"{SUPEMPTYROWS}
{DECIMAL 10}
{TABDELIMIT}
{ROWREPEAT}
{SUPBRACKETS}
{SUPCOMMAS}
{NOINDENTGEN}";

Descendants:
	'descendants' group=ID ',' dimension=Reference;

Declaration:
	DimensionDeclaration | GroupDeclaration | MemberDeclaration;

DimensionDeclaration:
	'dim' name=ID value=STRING;

GroupDeclaration:
	'group' name=ID value=STRING;

MemberDeclaration:
	'member' name=ID value=STRING;

Row:
	'row' {Row} '{' dimensions+=Reference (',' dimensions+=Reference)* '}';

Column:
	'column' {Column} '{' dimensions+=Reference (',' dimensions+=Reference)* '}'
; 	
Link:
	'link' {Link} '{' desc=Reference ',' lev=Reference '}'
; 	
Child:
	'child' {Child} '{' dimensions+=Reference (',' dimensions+=Reference)* '}'
; 	
ReportParameter:
	'reportParameter' {ReportParameter} '{' reparam=StringReference '}'
;

Reference:
	referred=[Declaration] | StringReference;

StringReference:
	value=STRING;

