/**
 * generated by Xtext 2.9.1
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.Link;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Reference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Link</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.LinkImpl#getDesc <em>Desc</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.LinkImpl#getLev <em>Lev</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LinkImpl extends ReportQueryParametersImpl implements Link
{
  /**
   * The cached value of the '{@link #getDesc() <em>Desc</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDesc()
   * @generated
   * @ordered
   */
  protected Reference desc;

  /**
   * The cached value of the '{@link #getLev() <em>Lev</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLev()
   * @generated
   * @ordered
   */
  protected Reference lev;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LinkImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.LINK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Reference getDesc()
  {
    return desc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDesc(Reference newDesc, NotificationChain msgs)
  {
    Reference oldDesc = desc;
    desc = newDesc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK__DESC, oldDesc, newDesc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDesc(Reference newDesc)
  {
    if (newDesc != desc)
    {
      NotificationChain msgs = null;
      if (desc != null)
        msgs = ((InternalEObject)desc).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK__DESC, null, msgs);
      if (newDesc != null)
        msgs = ((InternalEObject)newDesc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK__DESC, null, msgs);
      msgs = basicSetDesc(newDesc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK__DESC, newDesc, newDesc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Reference getLev()
  {
    return lev;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLev(Reference newLev, NotificationChain msgs)
  {
    Reference oldLev = lev;
    lev = newLev;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK__LEV, oldLev, newLev);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLev(Reference newLev)
  {
    if (newLev != lev)
    {
      NotificationChain msgs = null;
      if (lev != null)
        msgs = ((InternalEObject)lev).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK__LEV, null, msgs);
      if (newLev != null)
        msgs = ((InternalEObject)newLev).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LINK__LEV, null, msgs);
      msgs = basicSetLev(newLev, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.LINK__LEV, newLev, newLev));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.LINK__DESC:
        return basicSetDesc(null, msgs);
      case MyDslPackage.LINK__LEV:
        return basicSetLev(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.LINK__DESC:
        return getDesc();
      case MyDslPackage.LINK__LEV:
        return getLev();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.LINK__DESC:
        setDesc((Reference)newValue);
        return;
      case MyDslPackage.LINK__LEV:
        setLev((Reference)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.LINK__DESC:
        setDesc((Reference)null);
        return;
      case MyDslPackage.LINK__LEV:
        setLev((Reference)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.LINK__DESC:
        return desc != null;
      case MyDslPackage.LINK__LEV:
        return lev != null;
    }
    return super.eIsSet(featureID);
  }

} //LinkImpl
