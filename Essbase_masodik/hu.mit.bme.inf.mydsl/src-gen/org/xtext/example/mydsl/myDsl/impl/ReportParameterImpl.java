/**
 * generated by Xtext 2.9.1
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.ReportParameter;
import org.xtext.example.mydsl.myDsl.StringReference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Report Parameter</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ReportParameterImpl#getReparam <em>Reparam</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReportParameterImpl extends ReportQueryParametersImpl implements ReportParameter
{
  /**
   * The cached value of the '{@link #getReparam() <em>Reparam</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReparam()
   * @generated
   * @ordered
   */
  protected StringReference reparam;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReportParameterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.REPORT_PARAMETER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringReference getReparam()
  {
    return reparam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReparam(StringReference newReparam, NotificationChain msgs)
  {
    StringReference oldReparam = reparam;
    reparam = newReparam;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.REPORT_PARAMETER__REPARAM, oldReparam, newReparam);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReparam(StringReference newReparam)
  {
    if (newReparam != reparam)
    {
      NotificationChain msgs = null;
      if (reparam != null)
        msgs = ((InternalEObject)reparam).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REPORT_PARAMETER__REPARAM, null, msgs);
      if (newReparam != null)
        msgs = ((InternalEObject)newReparam).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REPORT_PARAMETER__REPARAM, null, msgs);
      msgs = basicSetReparam(newReparam, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.REPORT_PARAMETER__REPARAM, newReparam, newReparam));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.REPORT_PARAMETER__REPARAM:
        return basicSetReparam(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.REPORT_PARAMETER__REPARAM:
        return getReparam();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.REPORT_PARAMETER__REPARAM:
        setReparam((StringReference)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.REPORT_PARAMETER__REPARAM:
        setReparam((StringReference)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.REPORT_PARAMETER__REPARAM:
        return reparam != null;
    }
    return super.eIsSet(featureID);
  }

} //ReportParameterImpl
