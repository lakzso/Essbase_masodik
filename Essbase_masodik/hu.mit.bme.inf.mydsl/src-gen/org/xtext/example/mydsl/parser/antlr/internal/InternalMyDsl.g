/*
 * generated by Xtext 2.9.1
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getQueriesQueryParserRuleCall_0_0());
				}
				lv_Queries_0_0=ruleQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"Queries",
						lv_Queries_0_0,
						"org.xtext.example.mydsl.MyDsl.Query");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getReportsReportParserRuleCall_1_0());
				}
				lv_Reports_1_0=ruleReport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"Reports",
						lv_Reports_1_0,
						"org.xtext.example.mydsl.MyDsl.Report");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	iv_ruleQuery=ruleQuery
	{ $current=$iv_ruleQuery.current; }
	EOF;

// Rule Query
ruleQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getQueryAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQueryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getQueryAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='query'
		{
			newLeafNode(otherlv_2, grammarAccess.getQueryAccess().getQueryKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getQueryAccess().getLeftCurlyBracketKeyword_3());
		}
		{
			newCompositeNode(grammarAccess.getQueryAccess().getInitialStatementParserRuleCall_4());
		}
		ruleInitialStatement
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQueryAccess().getQueryReportQueryParametersParserRuleCall_5_0());
				}
				lv_Query_5_0=ruleReportQueryParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueryRule());
					}
					add(
						$current,
						"Query",
						lv_Query_5_0,
						"org.xtext.example.mydsl.MyDsl.ReportQueryParameters");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getQueryAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleReport
entryRuleReport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReportRule()); }
	iv_ruleReport=ruleReport
	{ $current=$iv_ruleReport.current; }
	EOF;

// Rule Report
ruleReport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='report'
		{
			newLeafNode(otherlv_0, grammarAccess.getReportAccess().getReportKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReportAccess().getReportAction_1(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReportRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getReportAccess().getRepoutQueryCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleReportQueryParameters
entryRuleReportQueryParameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReportQueryParametersRule()); }
	iv_ruleReportQueryParameters=ruleReportQueryParameters
	{ $current=$iv_ruleReportQueryParameters.current; }
	EOF;

// Rule ReportQueryParameters
ruleReportQueryParameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getReportQueryParametersAccess().getColumnParserRuleCall_0());
		}
		this_Column_0=ruleColumn
		{
			$current = $this_Column_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getReportQueryParametersAccess().getRowParserRuleCall_1());
		}
		this_Row_1=ruleRow
		{
			$current = $this_Row_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getReportQueryParametersAccess().getDescendantsParserRuleCall_2());
		}
		this_Descendants_2=ruleDescendants
		{
			$current = $this_Descendants_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getReportQueryParametersAccess().getDeclarationParserRuleCall_3());
		}
		this_Declaration_3=ruleDeclaration
		{
			$current = $this_Declaration_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getReportQueryParametersAccess().getReferenceParserRuleCall_4());
		}
		this_Reference_4=ruleReference
		{
			$current = $this_Reference_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getReportQueryParametersAccess().getChildParserRuleCall_5());
		}
		this_Child_5=ruleChild
		{
			$current = $this_Child_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getReportQueryParametersAccess().getLinkParserRuleCall_6());
		}
		this_Link_6=ruleLink
		{
			$current = $this_Link_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getReportQueryParametersAccess().getReportParameterParserRuleCall_7());
		}
		this_ReportParameter_7=ruleReportParameter
		{
			$current = $this_ReportParameter_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInitialStatement
entryRuleInitialStatement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInitialStatementRule()); }
	iv_ruleInitialStatement=ruleInitialStatement
	{ $current=$iv_ruleInitialStatement.current.getText(); }
	EOF;

// Rule InitialStatement
ruleInitialStatement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='{SUPEMPTYROWS}\r\n{DECIMAL 10}\r\n{TABDELIMIT}\r\n{ROWREPEAT}\r\n{SUPBRACKETS}\r\n{SUPCOMMAS}\r\n{NOINDENTGEN}'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getInitialStatementAccess().getSUPEMPTYROWSDECIMAL10TABDELIMITROWREPEATSUPBRACKETSSUPCOMMASNOINDENTGENKeyword());
	}
;

// Entry rule entryRuleDescendants
entryRuleDescendants returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDescendantsRule()); }
	iv_ruleDescendants=ruleDescendants
	{ $current=$iv_ruleDescendants.current; }
	EOF;

// Rule Descendants
ruleDescendants returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='descendants'
		{
			newLeafNode(otherlv_0, grammarAccess.getDescendantsAccess().getDescendantsKeyword_0());
		}
		(
			(
				lv_group_1_0=RULE_ID
				{
					newLeafNode(lv_group_1_0, grammarAccess.getDescendantsAccess().getGroupIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDescendantsRule());
					}
					setWithLastConsumed(
						$current,
						"group",
						lv_group_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getDescendantsAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDescendantsAccess().getDimensionReferenceParserRuleCall_3_0());
				}
				lv_dimension_3_0=ruleReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDescendantsRule());
					}
					set(
						$current,
						"dimension",
						lv_dimension_3_0,
						"org.xtext.example.mydsl.MyDsl.Reference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getDimensionDeclarationParserRuleCall_0());
		}
		this_DimensionDeclaration_0=ruleDimensionDeclaration
		{
			$current = $this_DimensionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getGroupDeclarationParserRuleCall_1());
		}
		this_GroupDeclaration_1=ruleGroupDeclaration
		{
			$current = $this_GroupDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getMemberDeclarationParserRuleCall_2());
		}
		this_MemberDeclaration_2=ruleMemberDeclaration
		{
			$current = $this_MemberDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDimensionDeclaration
entryRuleDimensionDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimensionDeclarationRule()); }
	iv_ruleDimensionDeclaration=ruleDimensionDeclaration
	{ $current=$iv_ruleDimensionDeclaration.current; }
	EOF;

// Rule DimensionDeclaration
ruleDimensionDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='dim'
		{
			newLeafNode(otherlv_0, grammarAccess.getDimensionDeclarationAccess().getDimKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDimensionDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimensionDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getDimensionDeclarationAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimensionDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleGroupDeclaration
entryRuleGroupDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupDeclarationRule()); }
	iv_ruleGroupDeclaration=ruleGroupDeclaration
	{ $current=$iv_ruleGroupDeclaration.current; }
	EOF;

// Rule GroupDeclaration
ruleGroupDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='group'
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupDeclarationAccess().getGroupKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGroupDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getGroupDeclarationAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleMemberDeclaration
entryRuleMemberDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemberDeclarationRule()); }
	iv_ruleMemberDeclaration=ruleMemberDeclaration
	{ $current=$iv_ruleMemberDeclaration.current; }
	EOF;

// Rule MemberDeclaration
ruleMemberDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='member'
		{
			newLeafNode(otherlv_0, grammarAccess.getMemberDeclarationAccess().getMemberKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMemberDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMemberDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getMemberDeclarationAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMemberDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleRow
entryRuleRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowRule()); }
	iv_ruleRow=ruleRow
	{ $current=$iv_ruleRow.current; }
	EOF;

// Rule Row
ruleRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='row'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowAccess().getRowKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRowAccess().getRowAction_1(),
					$current);
			}
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRowAccess().getDimensionsReferenceParserRuleCall_3_0());
				}
				lv_dimensions_3_0=ruleReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRowRule());
					}
					add(
						$current,
						"dimensions",
						lv_dimensions_3_0,
						"org.xtext.example.mydsl.MyDsl.Reference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getRowAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRowAccess().getDimensionsReferenceParserRuleCall_4_1_0());
					}
					lv_dimensions_5_0=ruleReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowRule());
						}
						add(
							$current,
							"dimensions",
							lv_dimensions_5_0,
							"org.xtext.example.mydsl.MyDsl.Reference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getRowAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleColumn
entryRuleColumn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnRule()); }
	iv_ruleColumn=ruleColumn
	{ $current=$iv_ruleColumn.current; }
	EOF;

// Rule Column
ruleColumn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='column'
		{
			newLeafNode(otherlv_0, grammarAccess.getColumnAccess().getColumnKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getColumnAccess().getColumnAction_1(),
					$current);
			}
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColumnAccess().getDimensionsReferenceParserRuleCall_3_0());
				}
				lv_dimensions_3_0=ruleReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColumnRule());
					}
					add(
						$current,
						"dimensions",
						lv_dimensions_3_0,
						"org.xtext.example.mydsl.MyDsl.Reference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getColumnAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnAccess().getDimensionsReferenceParserRuleCall_4_1_0());
					}
					lv_dimensions_5_0=ruleReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnRule());
						}
						add(
							$current,
							"dimensions",
							lv_dimensions_5_0,
							"org.xtext.example.mydsl.MyDsl.Reference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='link'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLinkKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLinkAccess().getLinkAction_1(),
					$current);
			}
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLinkAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkAccess().getDescReferenceParserRuleCall_3_0());
				}
				lv_desc_3_0=ruleReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkRule());
					}
					set(
						$current,
						"desc",
						lv_desc_3_0,
						"org.xtext.example.mydsl.MyDsl.Reference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getLinkAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkAccess().getLevReferenceParserRuleCall_5_0());
				}
				lv_lev_5_0=ruleReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkRule());
					}
					set(
						$current,
						"lev",
						lv_lev_5_0,
						"org.xtext.example.mydsl.MyDsl.Reference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getLinkAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleChild
entryRuleChild returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChildRule()); }
	iv_ruleChild=ruleChild
	{ $current=$iv_ruleChild.current; }
	EOF;

// Rule Child
ruleChild returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='child'
		{
			newLeafNode(otherlv_0, grammarAccess.getChildAccess().getChildKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getChildAccess().getChildAction_1(),
					$current);
			}
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getChildAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChildAccess().getDimensionsReferenceParserRuleCall_3_0());
				}
				lv_dimensions_3_0=ruleReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChildRule());
					}
					add(
						$current,
						"dimensions",
						lv_dimensions_3_0,
						"org.xtext.example.mydsl.MyDsl.Reference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getChildAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChildAccess().getDimensionsReferenceParserRuleCall_4_1_0());
					}
					lv_dimensions_5_0=ruleReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChildRule());
						}
						add(
							$current,
							"dimensions",
							lv_dimensions_5_0,
							"org.xtext.example.mydsl.MyDsl.Reference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getChildAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleReportParameter
entryRuleReportParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReportParameterRule()); }
	iv_ruleReportParameter=ruleReportParameter
	{ $current=$iv_ruleReportParameter.current; }
	EOF;

// Rule ReportParameter
ruleReportParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='reportParameter'
		{
			newLeafNode(otherlv_0, grammarAccess.getReportParameterAccess().getReportParameterKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReportParameterAccess().getReportParameterAction_1(),
					$current);
			}
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReportParameterAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReportParameterAccess().getReparamStringReferenceParserRuleCall_3_0());
				}
				lv_reparam_3_0=ruleStringReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReportParameterRule());
					}
					set(
						$current,
						"reparam",
						lv_reparam_3_0,
						"org.xtext.example.mydsl.MyDsl.StringReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getReportParameterAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	iv_ruleReference=ruleReference
	{ $current=$iv_ruleReference.current; }
	EOF;

// Rule Reference
ruleReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getReferredDeclarationCrossReference_0_0());
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getReferenceAccess().getStringReferenceParserRuleCall_1());
		}
		this_StringReference_1=ruleStringReference
		{
			$current = $this_StringReference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringReference
entryRuleStringReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringReferenceRule()); }
	iv_ruleStringReference=ruleStringReference
	{ $current=$iv_ruleStringReference.current; }
	EOF;

// Rule StringReference
ruleStringReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringReferenceAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringReferenceRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
